{"version":3,"sources":["Formula.js","Help.js","CalcKeys.js","RollSymbol.js","DieDropDown.js","DiceTools.js","InputToolbox.js","InputBar.js","RollHistory.js","Diceroll.js","App.js","serviceWorker.js","index.js"],"names":["ROLL","LOWEST","HIGHEST","Symbol","type","text","this","discard","parseFloat","DieSymbol","sides","value","toString","NumberSymbol","parseSymbols","expression","startPosition","pos","i","parserError","message","Error","isNumberPart","character","symbols","parenCount","lastChar","includeChar","lastSymbol","length","sideError","side","isRollRelated","includes","isValidBeforeOperator","push","slice","some","x","trim","_pos","rollOne","randomizer","actualSides","baseline","r","Math","random","floor","operation","number1","symbol","number2","count","rollIntoSymbols","keepCount","keepLowestOrHighest","dice","handleNoDice","Array","isArray","workdice","filter","d","undefined","forEach","die","compFunc","a","b","getNumber","sort","markDiscarded","performOperations","ops","newSymbols","operator","next","newSymbol","pop","subCalculate","calculate","lowerExpression","toLowerCase","pattern","RegExp","match","countLeft","countRight","testParentheses","rollAll","map","total","Help","class","onClick","props","onCloseRequest","React","Component","iconMap","faPlus","faMinus","faTimes","faDivide","iconifyButton","icon","CalcKeys","render","formulaButtonRow","collection","formulaButton","onInput","renderSymbol","String","d100","singleDie","Fragment","d10","textOverride","discarded","symbolClass","getSymbolClass","fullSymbolClass","getMarking","getFudgeText","prefix","classBySides","RollSymbol","rollSymbol","DieDropDown","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","sidesDropDownOption","onChange","implicit1","DiceTools","state","isFudged","sidesPerDie","handleSidesPerDieChange","min","max","e","target","dieCount","handleDieCountChange","disabled","highLow","handleHighLowChange","highLowCount","handleHighLowCountChange","title","handleDiceAddClick","handleRollClick","faDice","getDiceFormula","adjustHighLowCount","setState","onDiceAddClick","onRollClick","InputToolbox","dialogs","label","content","onFormulaAddRequest","onRollRequest","calc","openDialog","Object","values","dialog","formulaIsRollable","formula","InputBar","setDialog","handleFormulaAddRequest","onSetFormulaRequest","formulaField","current","handleHelpClick","help","handleRollRequest","handleFormulaKeyUp","event","keyCode","tools","tooltip","faWrench","faInfo","createRef","dialogButton","isActive","buttonTray","divClass","faTrashAlt","for","ref","onKeyUp","RollHistory","renderHistory","latestIndex","rolls","th","result","index","latestClass","rowClass","resultClass","renderSymbols","onReRollRequest","reverse","leftParen","rightParen","renderParen","Diceroll","roll","Formula","addResult","ex","formulaError","maxResults","results","error","role","splice","App","className","href","src","width","height","alt","rel","aria-label","xmlns","viewBox","focusable","fill","fill-rule","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e17b807e.chunk.js","sourcesContent":["const PLUS = '+';\r\nconst MINUS = '-';\r\nconst TIMES = '*';\r\nconst DIV = '/';\r\nconst ROLL = 'd';\r\nconst FUDGE = 'f';\r\nconst LOWEST = 'l';\r\nconst HIGHEST = 'h';\r\n\r\n// symbol types\r\nconst NUMBER = 0;\r\nconst OPERATOR = 1;\r\nconst COMPOUND = 2;\r\n\r\nclass Symbol {\r\n    constructor(type, text) {\r\n        this.type = type;\r\n        this.text = text;\r\n    }\r\n\r\n    getNumber() {\r\n        return this.type !== NUMBER || !!this.discard\r\n            ? 0 \r\n            : this.text === FUDGE ? FUDGE : parseFloat(this.text);\r\n    }\r\n}\r\n\r\nclass DieSymbol extends Symbol {\r\n    constructor(sides, value) {\r\n        super(NUMBER, value.toString());\r\n        this.sides = sides;\r\n        this.discard = false;\r\n    }\r\n}\r\n\r\nfunction NumberSymbol(value) {\r\n    return new Symbol(NUMBER, value.toString());\r\n}\r\n\r\nfunction parseSymbols(expression, startPosition) {\r\n    startPosition = startPosition || 0;\r\n    function pos(i) {\r\n        return startPosition + i;\r\n    }\r\n    function parserError(i, message) {\r\n        return new Error(`At position ${pos(i)}: ${message}`);\r\n    }\r\n    function isOperator(character) {\r\n        return character === PLUS ||\r\n            character === MINUS ||\r\n            character === TIMES ||\r\n            character === DIV ||\r\n            character === ROLL ||\r\n            character === LOWEST ||\r\n            character === HIGHEST;\r\n    }\r\n    function isNumberPart(character) {\r\n        return (character >= '0' && character <= '9') || character === FUDGE;\r\n    }\r\n    function isValidBeforeOperator(character) {\r\n        return character === \")\" || isNumberPart(character);\r\n    }\r\n    let symbols = [];\r\n    let parenCount = 0;\r\n    let lastChar = null;\r\n    for (let i = 0; i < expression.length; i++) {\r\n        let includeChar = true;\r\n        let lastSymbol = symbols.length > 0\r\n            ? symbols[symbols.length - 1]\r\n            : null;\r\n        if (parenCount > 0)\r\n        {\r\n            // within any number of parentheses\r\n            // all characters are treated\r\n            // as part of the same expression\r\n            if (expression[i] === ')')\r\n            {\r\n                parenCount--;\r\n            }\r\n            else if (expression[i] === '(')\r\n            {\r\n                parenCount++;\r\n            }\r\n            \r\n            if (parenCount > 0)\r\n            {\r\n                symbols[symbols.length - 1].text += expression[i];\r\n            }\r\n        }\r\n        else if (isOperator(expression[i])) {\r\n            const isRollRelated =\r\n                [HIGHEST, LOWEST, ROLL].includes(expression[i]);\r\n            function sideError(side) {\r\n                return parserError(i, `Operator \"${expression[i]}\" is missing a ${side} value.`);\r\n            }\r\n            if (lastChar === null || !isValidBeforeOperator(lastChar)) {\r\n                if (isRollRelated) {\r\n                    // Assume e.g. d10 == 1d10 and h2d20 == 1h2d20\r\n                    symbols.push(NumberSymbol(1));\r\n                } else {\r\n                    throw sideError(\"left-hand\");\r\n                }\r\n            }\r\n            if (i > 0 && isRollRelated) {\r\n                const predecessorIsRoll = symbols.length >= 2 &&\r\n                    symbols\r\n                        .slice(symbols.length - 2, symbols.length)\r\n                        .some(x => x.text === ROLL);\r\n                if (predecessorIsRoll) {\r\n                    throw parserError(i, `Invalid placement of operator \"${expression[i]}\".`);\r\n                }\r\n                const predecessorIsCompound = symbols.length >= 1 &&\r\n                    symbols[symbols.length -1].type === COMPOUND;\r\n                if (predecessorIsCompound) {\r\n                    throw parserError(i, \"Calculating number of dice in a pool is not supported.\");\r\n                }\r\n            }\r\n            if (i === expression.length - 1 || expression.slice(i+1).trim() === '') {\r\n                throw sideError(\"right-hand\");\r\n            }\r\n            symbols.push(new Symbol(OPERATOR, expression[i]));\r\n        }\r\n        else if (isNumberPart(expression[i]) && expression[i] !== FUDGE) {\r\n            if (lastChar === FUDGE) {\r\n                throw parserError(i, \"Invalid number placement.\");\r\n            }\r\n            else if (!lastSymbol || lastSymbol.type !== NUMBER) {\r\n                symbols.push(new Symbol(NUMBER, expression[i]));\r\n            }\r\n            else if (lastSymbol && expression[i-1] === ' ') {\r\n                throw parserError(i, \"Invalid spacing between numeric characters.\");\r\n            }\r\n            else {\r\n                lastSymbol.text += expression[i];\r\n            }\r\n        }\r\n        else if (expression[i] === FUDGE) {\r\n            if (lastChar === ROLL) {\r\n                symbols.push(new Symbol(NUMBER, expression[i]));\r\n            } else {\r\n                throw parserError(i, `Invalid placement of character \"${expression[i]}\".`);\r\n            }\r\n        }\r\n        else if (expression[i] === '(')\r\n        {\r\n            if (lastChar !== null) {\r\n                if (isNumberPart(lastChar)) {\r\n                    // If number precedes opening paren, treat as multiplier.\r\n                    symbols.push(new Symbol(OPERATOR, TIMES));\r\n                } else if (lastChar === ROLL) {\r\n                    throw parserError(i, \"Calculating number of sides per die is not supported.\");\r\n                }\r\n            }\r\n\r\n            parenCount++;\r\n            symbols.push(new Symbol(COMPOUND, ''));\r\n            symbols[symbols.length-1]._pos = pos(i) + 1;\r\n        }\r\n        else if (expression[i] === ' ') {\r\n            // ignore character but retain position.\r\n            includeChar = false;\r\n        }\r\n        else {\r\n            throw parserError(i, `Unrecognized character \"${expression[i]}\".`);\r\n        }\r\n        \r\n        lastChar = includeChar ? expression[i] : lastChar;\r\n    }\r\n\r\n    // convert COMPOUND symbols to sub-arrays.\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        if (symbols[i].type === COMPOUND) {\r\n            symbols[i] = parseSymbols(symbols[i].text, symbols[i]._pos);\r\n        }\r\n    }\r\n    \r\n    return symbols;\r\n}\r\n\r\nfunction rollOne(sides, randomizer) {\r\n    const [actualSides, baseline] = sides === FUDGE ? [3, -1] : [sides, 1];\r\n    const r = randomizer || Math.random;\r\n    return Math.floor(r() * actualSides) + baseline;\r\n}\r\n\r\nfunction rollIntoSymbols(count, sides, randomizer) {\r\n    let symbols = [];\r\n    for (let i = 0; i < count; i++) {\r\n        if (symbols.length > 0) {\r\n            symbols.push(new Symbol(OPERATOR, PLUS));\r\n        }\r\n        symbols.push(new DieSymbol(sides, rollOne(sides, randomizer)));\r\n    }\r\n    return symbols;\r\n}\r\n\r\nfunction markDiscarded(keepCount, keepLowestOrHighest, dice) {\r\n    function handleNoDice() {\r\n        throw new Error(\"Can only keep highest/lowest against a dice pool.\");\r\n    }\r\n    if (!Array.isArray(dice)) {\r\n        handleNoDice();\r\n    }\r\n    let workdice = dice.filter(d => d.sides !== undefined);\r\n    if (workdice.length === 0) {\r\n        handleNoDice();\r\n    }\r\n    workdice.forEach(die => die.discard = false);\r\n    const compFunc = keepLowestOrHighest === LOWEST\r\n        ? (a, b) => a.getNumber() - b.getNumber()\r\n        : (a, b) => b.getNumber() - a.getNumber();\r\n    workdice\r\n        .sort(compFunc)\r\n        .slice(keepCount)\r\n        .forEach(die => die.discard = true);\r\n    \r\n    return dice;\r\n}\r\n    \r\nfunction operation(number1, symbol, number2, randomizer) {\r\n    if (symbol === ROLL) {\r\n        return rollIntoSymbols(number1, number2, randomizer);\r\n    }\r\n    if ([LOWEST, HIGHEST].includes(symbol)) {\r\n        return markDiscarded(number1, symbol, number2);\r\n    }\r\n\r\n    return NumberSymbol((function () {\r\n        switch (symbol)\r\n        {\r\n            case PLUS:\r\n                return number1 + number2;\r\n            case MINUS:\r\n                return number1 - number2;\r\n            case TIMES:\r\n                return number1 * number2;\r\n            case DIV:\r\n                return number1 / number2;\r\n            default:\r\n                return number1;\r\n        }\r\n    })());\r\n}\r\n\r\nfunction performOperations(symbols, ops, randomizer)\r\n{\r\n    let newSymbols = [];\r\n    for (let i = 0; i < symbols.length; i++)\r\n    {\r\n        let symbol = symbols[i];\r\n        // if the current symbol is an operator\r\n        // and is one of the current operations declared by ops,\r\n        // perform that operation now.\r\n        if (symbol.type && symbol.type === OPERATOR && ops.includes(symbol.text))\r\n        {\r\n            // effectively convert NUMBER OPERATOR NUMBER to NUMBER\r\n            \r\n            // assumes that i is not first or last in the array\r\n            // and that before and after are both numbers.\r\n            const number1 = newSymbols[newSymbols.length-1].getNumber();\r\n            const operator = symbol.text[0];\r\n            const next = symbols[i+1];\r\n            const number2 = Array.isArray(next) ? next : next.getNumber();\r\n            let newSymbol = operation(number1, operator, number2, randomizer);\r\n            newSymbols.pop();\r\n            newSymbols.push(newSymbol);\r\n            i++;\r\n        } else {\r\n            newSymbols.push(symbol);\r\n        }\r\n    }\r\n\r\n    return newSymbols;\r\n}\r\n\r\nfunction testParentheses(expression) {\r\n    function count(symbol) {\r\n        const pattern = new RegExp('\\\\'+symbol, \"g\");\r\n        return (expression.match(pattern) || []).length;\r\n    }\r\n    const countLeft = count('(');\r\n    const countRight = count(')');\r\n    if (countLeft !== countRight) {\r\n        throw new Error(`Parentheses mismatch. Counted ${countLeft} opening and ${countRight} closing.`);\r\n    }\r\n}\r\n\r\nfunction subCalculate(symbols) {\r\n    // order of operations is R-P-MD-AS\r\n    // where R = roll dice\r\n    // Dice should already be rolled and processed into symbols.\r\n\r\n    // find parentheses first\r\n    let newSymbols = symbols.slice();\r\n    for (let i = 0; i < newSymbols.length; i++) {\r\n\r\n        if (Array.isArray(newSymbols[i]))\r\n        {\r\n            // convert COMPOUND to NUMBER via recursion\r\n            newSymbols[i] = NumberSymbol(subCalculate(newSymbols[i]));\r\n        }\r\n    }\r\n    \r\n    // multiplication and division\r\n    newSymbols = performOperations(newSymbols, [TIMES, DIV]);\r\n    \r\n    // addition and subtraction\r\n    newSymbols = performOperations(newSymbols, [PLUS, MINUS]);\r\n    \r\n    // by this point there should only be one NUMBER left.\r\n    // TODO: confirm above via validation code\r\n    \r\n    if (newSymbols.length >= 1)\r\n    {\r\n        return newSymbols[0].getNumber();\r\n    }\r\n    else\r\n    {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction rollAll(symbols, randomizer) {\r\n    // roll dice in sub-expressions\r\n    symbols = symbols.map(\r\n        symbol => Array.isArray(symbol) ? rollAll(symbol, randomizer) : symbol);\r\n\r\n    // roll dice\r\n    symbols = performOperations(symbols, [ROLL], randomizer);\r\n    symbols = performOperations(symbols, [LOWEST, HIGHEST]);\r\n    return symbols;\r\n}\r\n\r\n/**\r\n * Calculates the given formula expression.\r\n * \r\n * @param {string} expression\r\n *      The expression to parse and calculate.\r\n * @param {function} randomizer\r\n *      An optional function to produce a number\r\n *      between 0 (inclusive) and 1 (exclusive).\r\n *      Default is `Math.random`.\r\n */\r\nfunction calculate(expression, randomizer)\r\n{\r\n    const lowerExpression = expression.toLowerCase();\r\n    testParentheses(lowerExpression);\r\n\r\n    let symbols = parseSymbols(lowerExpression);\r\n    symbols = rollAll(symbols, randomizer);\r\n    return {\r\n        expression,\r\n        symbols,\r\n        total: subCalculate(symbols)\r\n    };\r\n}\r\n\r\nexport default {\r\n    parseSymbols,\r\n    calculate\r\n};","import React from 'react';\r\n\r\nexport default class Help extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"alert alert-info help\">\r\n                <h2>Help</h2>\r\n                <p>\r\n                    <small><em>Click the <strong>Help</strong> button again to dismiss this info box.</em></small>\r\n                </p>\r\n                <p>\r\n                    Any positive integer number can be entered as part of the formula.\r\n                    Numbers are joined together by operators.\r\n                    Operators include:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <code>d</code>:\r\n                        Roll dice.\r\n                        First number is the quantity of dice.\r\n                        Second number is the number of sides per die.\r\n                    </li>\r\n                    <li>\r\n                        <code>*</code>: Multiply the two numbers.\r\n                    </li>\r\n                    <li>\r\n                        <code>/</code>: Divide the first number by the second number.\r\n                    </li>\r\n                    <li>\r\n                        <code>+</code>: Add the two numbers.\r\n                    </li>\r\n                    <li>\r\n                        <code>-</code>: Subtract the second number from the first number.\r\n                    </li>\r\n                </ul>\r\n                <p>\r\n                    Calculation honors traditional order of operations.\r\n                    Calculates dice rolls first,\r\n                    then expressions in parentheses,\r\n                    then multiplication and division,\r\n                    then addition and subtraction.\r\n                </p>\r\n                <p>\r\n                    Examples:\r\n                    <ul>\r\n                        <li><code>2d6</code>: Rolls 2 6-sided dice.</li>\r\n                        <li><code>1d20+5</code>: Rolls a 20-sided die and adds 5.</li>\r\n                        <li><code>(4d8+2)/3</code>: Rolls 4 8-sided dice and adds 2, then divides by 3.</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Keep highest/lowest:\r\n                    <ul>\r\n                        <li><code>3h4d6</code>: Rolls 4 6-sided dice and only counts the 3 highest.</li>\r\n                        <li><code>1l2d20+3</code>: Rolls 2 20-sided dice, only counts the lowest, and adds 3.</li>\r\n                    </ul>\r\n                </p>\r\n                <p>\r\n                    Fudge dice:\r\n                    <ul>\r\n                        <li>\r\n                            <code>5df</code>: Rolls 5 fudge dice,\r\n                            each producing a value of -1, 0, or +1.\r\n                            Result will be between -5 and 5.\r\n                        </li>\r\n                    </ul>\r\n                </p>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <button class=\"btn btn-info\" type=\"button\"\r\n                            onClick={this.props.onCloseRequest}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus, faTimes, faDivide } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst iconMap = {\r\n    \"+\": faPlus,\r\n    \"-\": faMinus,\r\n    \"*\": faTimes,\r\n    \"/\": faDivide\r\n};\r\n\r\nconst iconifyButton = value => iconMap[value]\r\n    ? <FontAwesomeIcon icon={iconMap[value]} />\r\n    : value;\r\n\r\nexport default class CalcKeys extends React.Component {\r\n    render = () => (\r\n        <div class=\"my-2 calculator-buttons\">\r\n            {this.formulaButtonRow([7,8,9,'/'])}\r\n            {this.formulaButtonRow([4,5,6,'*'])}\r\n            {this.formulaButtonRow([1,2,3,'-'])}\r\n            {this.formulaButtonRow(['(',0,')','+'])}\r\n        </div>\r\n    );\r\n\r\n    formulaButtonRow = (collection) => (\r\n        <div class=\"form-row\">\r\n            {collection.map(value => this.formulaButton(value))}\r\n        </div>\r\n    );\r\n\r\n    formulaButton = (value) => (\r\n        <div class=\"col text-center\">\r\n            <button class=\"btn btn-secondary btn-lg\" type=\"button\"\r\n                onClick={() => this.props.onInput(value)}>\r\n                    {iconifyButton(value)}\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst renderSymbol = symbol => String(symbol.sides) === \"100\"\r\n    ? d100(symbol)\r\n    : singleDie(symbol);\r\n\r\nconst d100 = symbol => (\r\n    <React.Fragment>\r\n        {d10(symbol, Math.floor((symbol.text-1)/10) + \"0\")}\r\n        {d10(symbol, (symbol.text-1) % 10 + 1)}\r\n    </React.Fragment>\r\n);\r\n\r\nconst d10 = (symbol, textOverride) => singleDie({\r\n    discard: symbol.discard,\r\n    sides: 10,\r\n    text: textOverride\r\n});\r\n\r\nconst singleDie = symbol => {\r\n    const discarded = symbol.discard ? \" discarded\" : \"\";\r\n    const symbolClass = getSymbolClass(symbol.sides, symbol.text);\r\n    const dieClass = symbol.sides ? \" die \" + symbolClass : \"\";\r\n    const fullSymbolClass = \"symbol\" + discarded + dieClass;\r\n    return <span class={fullSymbolClass}>{getMarking(symbol)}</span>;\r\n};\r\n\r\nconst getMarking = symbol => symbol.sides === 'f'\r\n    ? getFudgeText(symbol.text)\r\n    : symbol.text;\r\n\r\nconst getFudgeText = value =>\r\n    value < 0 ? <FontAwesomeIcon icon={faMinus} />\r\n    : value > 0 ? <FontAwesomeIcon icon={faPlus} />\r\n    : <React.Fragment>&nbsp;</React.Fragment>;\r\n\r\nconst getSymbolClass = (sides, value) => {\r\n    const prefix = classBySides(sides);\r\n    return prefix ? `${prefix} ${prefix}-${value}` : \"coin\";\r\n};\r\n\r\nconst classBySides = (sides) => {\r\n    switch(String(sides)) {\r\n        case \"2\": return \"coin\";\r\n        case \"4\": return \"d4\";\r\n        case \"6\": return \"d6\";\r\n        case \"8\": return \"d8\";\r\n        case \"10\": return \"d10\";\r\n        case \"12\": return \"d12\";\r\n        case \"20\": return \"d20\";\r\n        case \"f\": return \"df\";\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport default class RollSymbol extends React.Component {\r\n    render = () => renderSymbol(this.props.symbol);\r\n}\r\n","import React from 'react';\r\nimport RollSymbol from './RollSymbol.js';\r\n\r\nconst rollSymbol = value =>\r\n    <RollSymbol symbol={{sides: value, text: value === \"f\" ? 1 : value }} />;\r\n\r\nexport default class DieDropDown extends React.Component {\r\n    render = () => (\r\n        <React.Fragment>\r\n            <button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"commonDiceDropdown\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">\r\n                {rollSymbol(this.props.value || \" \")} \r\n            </button>\r\n            <div class=\"dropdown-menu die-dropdown\" aria-labelledby=\"commonDiceDropdown\">\r\n                {this.sidesDropDownOption(2)}\r\n                {this.sidesDropDownOption(4)}\r\n                {this.sidesDropDownOption(6)}\r\n                {this.sidesDropDownOption(8)}\r\n                {this.sidesDropDownOption(10)}\r\n                {this.sidesDropDownOption(12)}\r\n                {this.sidesDropDownOption(20)}\r\n                {this.sidesDropDownOption(100)}\r\n                {this.sidesDropDownOption(\"f\")}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    sidesDropDownOption = value => (\r\n        <button class=\"dropdown-item px-1\" type=\"button\"\r\n            onClick={() => this.props.onChange(value)}>\r\n            {rollSymbol(value)}\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport DieDropDown from './DieDropDown.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faDice } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst implicit1 = value => value > 1 ? value : \"\";\r\nconst enableHighLow = dieCount => dieCount > 1;\r\nconst fudge = \"f\";\r\n\r\nexport default class DiceTools extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dieCount: null,\r\n            sidesPerDie: 6,\r\n            isFudged: false,\r\n            highLow: \"\",\r\n            highLowCount: null\r\n        };\r\n    }\r\n\r\n    render = () => (\r\n        <React.Fragment>\r\n            <div class=\"form-row\">\r\n                <div class=\"col\">\r\n                    <label>Sides</label>\r\n                    <div class=\"float-right text-muted\">\r\n                        {\r\n                            this.state.isFudged ? \"Fudge Die\"\r\n                            : this.state.sidesPerDie.toString() === \"2\" ? \"Coin\"\r\n                            : \"D\" + this.state.sidesPerDie\r\n                        }\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <DieDropDown\r\n                                    value={this.state.isFudged ? fudge : this.state.sidesPerDie}\r\n                                    onChange={this.handleSidesPerDieChange} />\r\n                            </div>\r\n                            <input type=\"number\" min=\"2\" max=\"1000\"\r\n                                class={\"form-control\" + (this.state.isFudged ? \" text-warning\" : \"\")} \r\n                                value={this.state.sidesPerDie}\r\n                                onChange={(e) => this.handleSidesPerDieChange(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label>Count</label>\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" type=\"number\" min=\"1\" max=\"1000\"\r\n                            value={this.state.dieCount}\r\n                            onChange={this.handleDieCountChange} /> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"col-7\">\r\n                    <label>Keep</label>\r\n                    <div class=\"input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <select class=\"custom-select\"\r\n                                disabled={this.state.dieCount <= 1}\r\n                                value={this.state.highLow}\r\n                                onChange={this.handleHighLowChange}>\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"h\">High</option>\r\n                                <option value=\"l\">Low</option>\r\n                            </select>\r\n                        </div>\r\n                        <input class=\"form-control\" type=\"number\" min=\"1\"\r\n                            disabled={!this.state.highLow}\r\n                            max={this.state.dieCount-1}\r\n                            value={this.state.highLowCount}\r\n                            onChange={this.handleHighLowCountChange} />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label>&nbsp;</label>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col btn-group text-right\">\r\n                            <button class=\"btn btn-secondary\" type=\"button\"\r\n                                title=\"Add dice to formula\"\r\n                                disabled={!this.state.sidesPerDie}\r\n                                onClick={this.handleDiceAddClick}>\r\n                                    <FontAwesomeIcon icon={faPlus} />\r\n                            </button>\r\n                            <button class=\"btn btn-outline-primary\" type=\"button\"\r\n                                title=\"Set dice as formula and roll now\"\r\n                                disabled={!this.state.sidesPerDie}\r\n                                onClick={this.handleRollClick}>\r\n                                    <FontAwesomeIcon icon={faDice} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    getDiceFormula = () => {\r\n        const highLow = this.state.highLow \r\n            ? implicit1(this.state.highLowCount) + this.state.highLow\r\n            : \"\";\r\n        const sides = this.state.isFudged ? fudge : this.state.sidesPerDie;\r\n        const dice =\r\n            implicit1(this.state.dieCount) + \"d\" + sides;\r\n        return highLow + dice;\r\n    };\r\n\r\n    adjustHighLowCount = (dieCount, highLow) =>\r\n        !highLow\r\n            ? \"\"\r\n            : this.state.highLowCount >= dieCount\r\n                ? dieCount - 1\r\n                : this.state.highLowCount;\r\n    \r\n    handleDieCountChange = (e) => {\r\n        const highLow = enableHighLow(e.target.value)\r\n            ? this.state.highLow\r\n            : \"\";\r\n        this.setState({\r\n            dieCount: e.target.value,\r\n            highLow,\r\n            highLowCount: this.adjustHighLowCount(e.target.value, highLow)\r\n        });\r\n    };\r\n    handleHighLowChange = (e) => this.setState({\r\n        highLow: e.target.value,\r\n        highLowCount: this.adjustHighLowCount(\r\n            this.state.dieCount,\r\n            e.target.value)\r\n    });\r\n    handleHighLowCountChange = (e) => this.setState({highLowCount: e.target.value});\r\n    handleSidesPerDieChange = (value) => this.setState({\r\n        sidesPerDie: value === fudge ? 3 : value,\r\n        isFudged: value === fudge\r\n    });\r\n    handleDiceAddClick = () =>\r\n        this.props.onDiceAddClick(this.getDiceFormula());\r\n    handleRollClick = () =>\r\n        this.props.onRollClick(this.getDiceFormula());\r\n}\r\n","import React from 'react';\r\nimport CalcKeys from './CalcKeys.js';\r\nimport DiceTools from './DiceTools.js';\r\n\r\nexport default class InputToolbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dialogs = {\r\n            dice: {\r\n                label: \"Dice\",\r\n                content: <DiceTools \r\n                    onDiceAddClick={this.props.onFormulaAddRequest}\r\n                    onRollClick={this.props.onRollRequest} />\r\n            },\r\n            calc: {\r\n                label: \"Math\",\r\n                content: <CalcKeys onInput={this.props.onFormulaAddRequest} />\r\n            }\r\n        };\r\n        this.state = {\r\n            openDialog: this.dialogs.dice\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div class=\"row justify-content-center d-lg-none\">\r\n                    <div class=\"btn-group\">\r\n                        {Object.values(this.dialogs).map(dialog => (\r\n                            <button\r\n                                class={\"btn btn-outline-secondary btn-sm\" + (this.state.openDialog === dialog ? \" active\" : \"\")}\r\n                                onClick={() => this.setState({openDialog: dialog})}>\r\n                                {dialog.label}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                    {Object.values(this.dialogs).map(dialog => (\r\n                        <div class={\"col-lg-4\" + (this.state.openDialog === dialog ? \"\" : \" d-none d-lg-block\")}>\r\n                            {dialog.content}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Help from './Help.js';\r\nimport InputToolbox from './InputToolbox.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDice, faInfo, faTrashAlt, faWrench } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst formulaIsRollable = formula => formula && formula.trim() !== \"\";\r\n\r\nexport default class InputBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dialogs = {\r\n            tools: {\r\n                tooltip: \"Formula Building Tools\",\r\n                icon: faWrench,\r\n                content: <InputToolbox\r\n                    onFormulaAddRequest={this.handleFormulaAddRequest}\r\n                    onRollRequest={this.handleRollRequest} />\r\n            },\r\n            help: {\r\n                tooltip: \"Formula Help\",\r\n                icon: faInfo,\r\n                content: <Help onCloseRequest={this.handleHelpClick} />\r\n            }\r\n        };\r\n        this.formulaField = React.createRef();\r\n        this.state = {\r\n            openDialog: null\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        const buttonClass = isActive =>\r\n            \"btn btn-outline-secondary\" + (isActive ? \" active\" : \"\");\r\n        const dialogButton = dialog => (\r\n            <button type=\"button\"\r\n                    title={dialog.tooltip}\r\n                    class={buttonClass(this.state.openDialog === dialog)}\r\n                    onClick={() => this.setDialog(dialog)}>\r\n                        <FontAwesomeIcon icon={dialog.icon} />\r\n                </button>\r\n        );\r\n        const buttonTray = divClass => (\r\n            <div class={divClass}>\r\n                {dialogButton(this.dialogs.tools)}\r\n                {dialogButton(this.dialogs.help)}\r\n                <button class=\"btn btn-outline-danger\" type=\"button\"\r\n                    title=\"Clear Formula\"\r\n                    onClick={(e) => this.props.onSetFormulaRequest(\"\")}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                </button>\r\n            </div>\r\n        );\r\n        return (\r\n            <div class=\"form-group mt-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"rollFormula\">Formula</label>\r\n                    <div>\r\n                        {buttonTray(\"form-group btn-group d-sm-none\")}\r\n                    </div>\r\n                    <div class=\"input-group\">\r\n                        {buttonTray(\"input-group-prepend d-none d-sm-inline-block\")}\r\n                        <input type=\"text\" class=\"form-control\"\r\n                            ref={this.formulaField}\r\n                            onKeyUp={this.handleFormulaKeyUp}\r\n                            onChange={(e) => this.props.onSetFormulaRequest(e.target.value)}\r\n                            value={this.props.formula} />\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-primary\" type=\"submit\"\r\n                                title=\"Roll\"\r\n                                disabled={!formulaIsRollable(this.props.formula)}\r\n                                onClick={this.handleRollClick}>\r\n                                    <FontAwesomeIcon icon={faDice} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {Object.values(this.dialogs).map(dialog => (\r\n                    <div class={this.state.openDialog === dialog ? \"\" : \"d-none\"}>\r\n                        {dialog.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setDialog = (value) => this.setState({\r\n        openDialog: this.state.openDialog === value ? null : value\r\n    });\r\n    handleFormulaAddRequest = (value) =>\r\n        this.props.onSetFormulaRequest(\r\n            this.formulaField.current.value + value);\r\n    handleHelpClick = () => this.setDialog(this.dialogs.help);\r\n    handleRollRequest = (value) =>\r\n        this.props.onRollRequest(value);\r\n    handleRollClick = () => this.handleRollRequest();\r\n    handleFormulaKeyUp = (event) => {\r\n        if (event.keyCode === 13 && formulaIsRollable(this.props.formula)) {\r\n            this.props.onRollRequest();\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport RollSymbol from './RollSymbol.js';\r\n\r\nexport default class RollHistory extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"history\">\r\n                {this.renderHistory()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHistory() {\r\n        const latestIndex = this.props.rolls.length - 1;\r\n        const th = this;\r\n        return this.props.rolls\r\n            .map(function(result, index) {\r\n                const latestClass = index === latestIndex ? \" latest\" : \"\";\r\n                const rowClass = \"row align-items-center\" + latestClass;\r\n                const resultClass = \"result\" + latestClass;\r\n                return (\r\n                    <div class={rowClass}>\r\n                        <div class=\"col-md-8\">\r\n                            {th.renderSymbols(result.symbols)}\r\n                        </div>\r\n                        <div class=\"col-md-3 text-right\">\r\n                            <span class={resultClass}>{result.total}</span>\r\n                        </div>\r\n                        <div class=\"col-md-1 text-right\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" type=\"button\"\r\n                                    title={result.expression}\r\n                                    onClick={() => th.props.onReRollRequest(result.expression)}>Re-roll</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n            .reverse();\r\n    }\r\n\r\n    renderSymbols(symbols) {\r\n        const leftParen = <RollSymbol symbol={{text: \"(\"}} />;\r\n        const rightParen = <RollSymbol symbol={{text: \")\"}} />;\r\n        return symbols.map(symbol => {\r\n            if (Array.isArray(symbol)) {\r\n                const renderParen = symbols.length > 1 &&\r\n                    (\r\n                        symbol.length > 1 ||\r\n                        Array.isArray(symbol[0])\r\n                    );\r\n                return <span>\r\n                    {renderParen ? leftParen : \"\"}\r\n                    {this.renderSymbols(symbol)}\r\n                    {renderParen ? rightParen : \"\"}\r\n                </span>;\r\n            }\r\n            // Skip plus operator from dice array. \r\n            if (symbols.some(x => x.sides) && symbol.text === \"+\") {\r\n                return \"\";\r\n            }\r\n            return <RollSymbol symbol={symbol} />;\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Formula from './Formula.js';\r\nimport InputBar from './InputBar.js';\r\nimport RollHistory from './RollHistory.js';\r\n\r\nexport default class Diceroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.maxResults = 50;\r\n        this.state = {\r\n            formula: null,\r\n            formulaError: null,\r\n            results: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const error = this.state.formulaError\r\n            ? (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.formulaError.message}\r\n                </div>\r\n            )\r\n            : \"\";\r\n        return (\r\n            <div class=\"container\">\r\n                <InputBar\r\n                    formula={this.state.formula}\r\n                    onSetFormulaRequest={value => this.setState({formula: value})}\r\n                    onRollRequest={this.handleRollRequest} />\r\n                {error}\r\n                <RollHistory\r\n                    rolls={this.state.results}\r\n                    onReRollRequest={this.handleRollRequest} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    roll = (expression) => {\r\n        try {\r\n            const result = Formula.calculate(expression || this.state.formula);\r\n            this.addResult(result);\r\n        } catch(ex) {\r\n            this.setState({formulaError: ex});\r\n        }\r\n    };\r\n\r\n    handleRollRequest = (value) => {\r\n        const formula = value !== undefined ? value : this.state.formula;\r\n        this.setState({formula});\r\n        this.roll(formula);\r\n    };\r\n\r\n    addResult(result) {\r\n        let results = this.state.results;\r\n        results.push(result);\r\n        if (results.length > this.maxResults) {\r\n            results.splice(0, 1);\r\n        }\r\n        this.setState({\r\n            results: results,\r\n            formulaError: null\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Diceroll from './Diceroll.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav class=\"navbar navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\".\">\r\n          <img src=\"image/icon.svg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\" />\r\n          Diceroll\r\n        </a>\r\n\r\n        <a class=\"nav-link p-2\" href=\"https://github.com/aaaantoine/diceroll\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"GitHub\">\r\n          <svg class=\"navbar-nav-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 499.36\" focusable=\"false\">\r\n            <title>GitHub</title>\r\n            <path d=\"M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z\" fill=\"currentColor\" fill-rule=\"evenodd\"></path>\r\n          </svg>\r\n        </a>\r\n      </nav>\r\n\r\n      <Diceroll />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}